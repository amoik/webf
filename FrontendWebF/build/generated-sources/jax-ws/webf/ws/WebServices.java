
package webf.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServices", targetNamespace = "http://webservice.webf/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServices {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webservice.webf/", className = "webf.ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.LoginResponse")
    @Action(input = "http://webservice.webf/WebServices/loginRequest", output = "http://webservice.webf/WebServices/loginResponse")
    public int login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<webf.ws.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPersons", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllPersons")
    @ResponseWrapper(localName = "getAllPersonsResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllPersonsResponse")
    @Action(input = "http://webservice.webf/WebServices/getAllPersonsRequest", output = "http://webservice.webf/WebServices/getAllPersonsResponse")
    public List<Person> getAllPersons();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://webservice.webf/", className = "webf.ws.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.DeletePersonResponse")
    @Action(input = "http://webservice.webf/WebServices/deletePersonRequest", output = "http://webservice.webf/WebServices/deletePersonResponse")
    public Boolean deletePerson(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://webservice.webf/", className = "webf.ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.HelloResponse")
    @Action(input = "http://webservice.webf/WebServices/helloRequest", output = "http://webservice.webf/WebServices/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://webservice.webf/", className = "webf.ws.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.CreatePersonResponse")
    @Action(input = "http://webservice.webf/WebServices/createPersonRequest", output = "http://webservice.webf/WebServices/createPersonResponse")
    public Boolean createPerson(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @return
     *     returns java.util.List<webf.ws.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudents", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetStudents")
    @ResponseWrapper(localName = "getStudentsResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetStudentsResponse")
    @Action(input = "http://webservice.webf/WebServices/getStudentsRequest", output = "http://webservice.webf/WebServices/getStudentsResponse")
    public List<Person> getStudents();

    /**
     * 
     * @param arg0
     * @return
     *     returns webf.ws.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPerson", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetPerson")
    @ResponseWrapper(localName = "getPersonResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetPersonResponse")
    @Action(input = "http://webservice.webf/WebServices/getPersonRequest", output = "http://webservice.webf/WebServices/getPersonResponse")
    public Person getPerson(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<webf.ws.Course>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCourses", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllCourses")
    @ResponseWrapper(localName = "getAllCoursesResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllCoursesResponse")
    @Action(input = "http://webservice.webf/WebServices/getAllCoursesRequest", output = "http://webservice.webf/WebServices/getAllCoursesResponse")
    public List<Course> getAllCourses();

    /**
     * 
     * @return
     *     returns java.util.List<webf.ws.PersonCourseMembership>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllMemberships", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllMemberships")
    @ResponseWrapper(localName = "getAllMembershipsResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.GetAllMembershipsResponse")
    @Action(input = "http://webservice.webf/WebServices/getAllMembershipsRequest", output = "http://webservice.webf/WebServices/getAllMembershipsResponse")
    public List<PersonCourseMembership> getAllMemberships();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://webservice.webf/", className = "webf.ws.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.MultiplyResponse")
    @Action(input = "http://webservice.webf/WebServices/multiplyRequest", output = "http://webservice.webf/WebServices/multiplyResponse")
    public double multiply(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "subtract", targetNamespace = "http://webservice.webf/", className = "webf.ws.Subtract")
    @ResponseWrapper(localName = "subtractResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.SubtractResponse")
    @Action(input = "http://webservice.webf/WebServices/subtractRequest", output = "http://webservice.webf/WebServices/subtractResponse")
    public double subtract(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://webservice.webf/", className = "webf.ws.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.AddResponse")
    @Action(input = "http://webservice.webf/WebServices/addRequest", output = "http://webservice.webf/WebServices/addResponse")
    public double add(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://webservice.webf/", className = "webf.ws.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://webservice.webf/", className = "webf.ws.DivideResponse")
    @Action(input = "http://webservice.webf/WebServices/divideRequest", output = "http://webservice.webf/WebServices/divideResponse")
    public double divide(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
